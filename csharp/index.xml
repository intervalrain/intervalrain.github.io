<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Csharps on Rain Hu's Workspace</title><link>https://intervalrain.github.io/csharp/</link><description>Recent content in Csharps on Rain Hu's Workspace</description><generator>Hugo -- 0.151.0</generator><language>zh-tw</language><lastBuildDate>Sat, 22 Jul 2023 20:59:57 +0800</lastBuildDate><atom:link href="https://intervalrain.github.io/csharp/index.xml" rel="self" type="application/rss+xml"/><item><title>[C#] Large Object Heap</title><link>https://intervalrain.github.io/csharp/loh/</link><pubDate>Sat, 22 Jul 2023 20:59:57 +0800</pubDate><guid>https://intervalrain.github.io/csharp/loh/</guid><description>Introduction to Large Object Heap</description></item><item><title>[CS] Sample cost for performance test</title><link>https://intervalrain.github.io/csharp/performancetest/</link><pubDate>Tue, 16 May 2023 21:26:24 +0800</pubDate><guid>https://intervalrain.github.io/csharp/performancetest/</guid><description>&lt;h3 id="sample-code-for-stop-watch"&gt;Sample code for stop watch&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-Csharp" data-lang="Csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Data;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Linq;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Runtime.CompilerServices;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Data.Common;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Diagnostics;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Drawing;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Text;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;using&lt;/span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;namespace&lt;/span&gt; Rainspace.PlayGround
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;class&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Program&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;static&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;void&lt;/span&gt; Main(&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;[] args)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Stopwatch sw = &lt;span style="color:#66d9ef"&gt;new&lt;/span&gt; Stopwatch();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sw.Start();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; System.Console.WriteLine(&lt;span style="color:#e6db74"&gt;&amp;#34;==============Accumulate1==============&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; System.Console.WriteLine(&lt;span style="color:#e6db74"&gt;&amp;#34;Result: &amp;#34;&lt;/span&gt; + Accumulate(&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sw.Stop();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; System.Console.WriteLine(&lt;span style="color:#e6db74"&gt;&amp;#34;Time cost: &amp;#34;&lt;/span&gt; + (sw.ElapsedTicks/&lt;span style="color:#ae81ff"&gt;1.0e6&lt;/span&gt;).ToString() + &lt;span style="color:#e6db74"&gt;&amp;#34;ms&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sw.Reset();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sw.Start();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; System.Console.WriteLine(&lt;span style="color:#e6db74"&gt;&amp;#34;==============Accumulate2==============&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; System.Console.WriteLine(&lt;span style="color:#e6db74"&gt;&amp;#34;Result: &amp;#34;&lt;/span&gt; + Accumulate(&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sw.Stop();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; System.Console.WriteLine(&lt;span style="color:#e6db74"&gt;&amp;#34;Time cost: &amp;#34;&lt;/span&gt; + (sw.ElapsedTicks/&lt;span style="color:#ae81ff"&gt;1.0e6&lt;/span&gt;).ToString() + &lt;span style="color:#e6db74"&gt;&amp;#34;ms&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;static&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; Accumulate(&lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; begin, &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; end, &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; sum = &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; res = sum;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; (end &amp;lt; begin) &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; Accumulate(end, begin, sum);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; (&lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; i = begin; i &amp;lt; end; i++)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; res += i;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; res;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;static&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; Accumulate2(&lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; begin, &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; end, &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; sum = &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; res = (begin + end) * (end - begin) / &lt;span style="color:#ae81ff"&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; res + sum;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>[C#] C#3、LINQ 及相關特性</title><link>https://intervalrain.github.io/csharp/linq_props/</link><pubDate>Mon, 01 May 2023 14:10:48 +0800</pubDate><guid>https://intervalrain.github.io/csharp/linq_props/</guid><description>Introduction to LINQ in C#</description></item><item><title>[C#] Namespace Alias 命名空間別名</title><link>https://intervalrain.github.io/csharp/namespace_alias/</link><pubDate>Tue, 28 Feb 2023 22:51:08 +0800</pubDate><guid>https://intervalrain.github.io/csharp/namespace_alias/</guid><description>Namespace alias in C#</description></item><item><title>[C#] Property getter/setter access separate 訪問權限分離</title><link>https://intervalrain.github.io/csharp/getter_setter_access_separate/</link><pubDate>Tue, 28 Feb 2023 22:18:25 +0800</pubDate><guid>https://intervalrain.github.io/csharp/getter_setter_access_separate/</guid><description>Separate getter/setter property access in C#</description></item><item><title>[C#] static class 靜態類別</title><link>https://intervalrain.github.io/csharp/static/</link><pubDate>Tue, 28 Feb 2023 21:08:01 +0800</pubDate><guid>https://intervalrain.github.io/csharp/static/</guid><description>Introduction to static class in C#</description></item><item><title>[C#] C# 筆記</title><link>https://intervalrain.github.io/csharp/csharp/</link><pubDate>Tue, 28 Feb 2023 18:49:39 +0800</pubDate><guid>https://intervalrain.github.io/csharp/csharp/</guid><description>Notes for C#</description></item><item><title>[C#] Partial Type 局部類型</title><link>https://intervalrain.github.io/csharp/partial/</link><pubDate>Tue, 28 Feb 2023 15:11:11 +0800</pubDate><guid>https://intervalrain.github.io/csharp/partial/</guid><description>Introduction to partial class ans partial method in C#</description></item><item><title>[C#] IEnumerable &amp; IEnumerator 迭代器</title><link>https://intervalrain.github.io/csharp/iterator/</link><pubDate>Mon, 27 Feb 2023 11:50:20 +0800</pubDate><guid>https://intervalrain.github.io/csharp/iterator/</guid><description>Introduction to Iterator in C#, including IEnumerator and IEnumerable</description></item><item><title>[C#] Delegate 委派</title><link>https://intervalrain.github.io/csharp/delegate/</link><pubDate>Sun, 26 Feb 2023 19:24:56 +0800</pubDate><guid>https://intervalrain.github.io/csharp/delegate/</guid><description>Introduction to Delegate in C#</description></item><item><title>[C#] Nullable 可空值類型</title><link>https://intervalrain.github.io/csharp/nullable/</link><pubDate>Thu, 23 Feb 2023 21:40:03 +0800</pubDate><guid>https://intervalrain.github.io/csharp/nullable/</guid><description>Introduction to Nullable in C#</description></item><item><title>[C#] Generic 泛型</title><link>https://intervalrain.github.io/csharp/generic/</link><pubDate>Wed, 22 Feb 2023 21:39:56 +0800</pubDate><guid>https://intervalrain.github.io/csharp/generic/</guid><description>Introduction to Generic in C#</description></item><item><title>[C#] Yield Return</title><link>https://intervalrain.github.io/csharp/yield/</link><pubDate>Sun, 01 Jan 2023 21:40:25 +0800</pubDate><guid>https://intervalrain.github.io/csharp/yield/</guid><description>Introduction to yield return in C#, and the background of IEnumerable and IEnumerator</description></item><item><title/><link>https://intervalrain.github.io/csharp/concurrency_and_asyncchronous_programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://intervalrain.github.io/csharp/concurrency_and_asyncchronous_programming/</guid><description>&lt;h1 id="c-並行與異步編程完整教學"&gt;C# 並行與異步編程完整教學&lt;/h1&gt;
&lt;h2 id="目錄"&gt;目錄&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#%E5%9F%BA%E7%A4%8E%E6%A6%82%E5%BF%B5"&gt;基礎概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%99%95%E7%90%86%E5%99%A8%E6%9E%B6%E6%A7%8B"&gt;處理器架構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%90%8C%E6%AD%A5%E6%A9%9F%E5%88%B6"&gt;同步機制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%95%B0%E6%AD%A5%E7%B7%A8%E7%A8%8B%E5%85%83%E4%BB%B6"&gt;異步編程元件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B8%B8%E8%A6%8B%E6%A8%A1%E5%BC%8F"&gt;常見模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C%E8%88%87%E9%99%B7%E9%98%B1"&gt;常見問題與陷阱&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id="基礎概念"&gt;基礎概念&lt;/h2&gt;
&lt;h3 id="多執行緒與並行"&gt;多執行緒與並行&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;執行緒 (Thread)&lt;/strong&gt; 是作業系統能夠進行運算排程的最小單位。一個程序可以包含多個執行緒，這些執行緒共享程序的記憶體空間。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;並行 (Concurrency)&lt;/strong&gt; 是指多個任務在重疊的時間段內執行，不一定是同時執行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;平行 (Parallelism)&lt;/strong&gt; 是指多個任務在同一時刻真正同時執行，需要多核處理器支援。&lt;/p&gt;
&lt;h3 id="異步編程-asynchronous-programming"&gt;異步編程 (Asynchronous Programming)&lt;/h3&gt;
&lt;p&gt;異步編程允許程式在等待某個操作完成時繼續執行其他工作，而不是阻塞等待。在 C# 中，主要透過 &lt;code&gt;async&lt;/code&gt; 和 &lt;code&gt;await&lt;/code&gt; 關鍵字實現。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// 同步版本 - 會阻塞執行緒&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt; DownloadData(&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt; url)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; client = &lt;span style="color:#66d9ef"&gt;new&lt;/span&gt; HttpClient();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; response = client.GetStringAsync(url).Result; &lt;span style="color:#75715e"&gt;// 阻塞&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; response;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// 異步版本 - 不阻塞執行緒&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;async&lt;/span&gt; Task&amp;lt;&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;&amp;gt; DownloadDataAsync(&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt; url)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; client = &lt;span style="color:#66d9ef"&gt;new&lt;/span&gt; HttpClient();
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; response = &lt;span style="color:#66d9ef"&gt;await&lt;/span&gt; client.GetStringAsync(url); &lt;span style="color:#75715e"&gt;// 不阻塞&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; response;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;關鍵差異&lt;/strong&gt;：&lt;/p&gt;</description></item></channel></rss>